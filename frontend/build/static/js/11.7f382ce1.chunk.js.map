{"version":3,"sources":["users/pages/Auth.js","shared/component/UIElements/Card.js","shared/Util/validators.js","shared/component/formElements/Input.js","shared/hooks/form-hook.js","shared/component/formElements/ImageUpload.js"],"names":["Auth","auth","useContext","AuthContext","useState","isLoginMod","setIsLoginMod","useHttpClient","isLoading","error","sendRequest","clearError","socialLogin","toggleSocialLogin","useFrom","email","value","isValid","password","state","inputHandler","setFormData","authSubmitHandler","event","a","preventDefault","process","JSON","stringify","inputs","res","login","userId","token","friendStatus","formData","FormData","append","name","image","onClear","className","asOverlay","onSubmit","href","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","center","VALIDATOR_EMAIL","VALIDATOR_MINLENGTH","disabled","to","inverse","onClick","undefined","prevMode","Card","props","style","children","val","validate","validator","trim","length","test","inputReducer","action","isTouched","Input","changeHandeler","dispatch","target","touchHandler","inaialState","initailValue","initailValid","useReducer","useEffect","placeholder","onChange","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initailInput","initailFormValidity","useCallback","inputData","formValidity","ImageUpload","pickedFile","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","files","src","alt","current","click"],"mappings":"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","file":"static/js/11.7f382ce1.chunk.js","sourcesContent":["import React, { useState, useContext, Fragment } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./Auth.css\";\r\nimport Input from \"../../shared/component/formElements/Input\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport ImageUpload from \"../../shared/component/formElements/ImageUpload\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { useFrom } from \"../../shared/hooks/form-hook\";\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n} from \"../../shared/Util/validators\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n// React Icons\r\nimport { FaFacebookF, FaGoogle } from \"react-icons/fa\";\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMod, setIsLoginMod] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [socialLogin, toggleSocialLogin] = useState(true);\r\n\r\n  const [state, inputHandler, setFormData] = useFrom(\r\n    {\r\n      email: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      password: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n  const switchModelHandler = () => {\r\n    if (!isLoginMod) {\r\n      setFormData(\r\n        {\r\n          ...state.inputs,\r\n          name: undefined,\r\n          image: undefined,\r\n        },\r\n        state.inputs.email.isValid && state.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...state.inputs,\r\n          name: {\r\n            value: \"\",\r\n            isValid: false,\r\n          },\r\n          image: {\r\n            value: null,\r\n            isValid: false,\r\n          },\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMod((prevMode) => !prevMode);\r\n    toggleSocialLogin((socialLogin) => !socialLogin);\r\n  };\r\n\r\n  const authSubmitHandler = async (event) => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMod) {\r\n      try {\r\n        const res = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\r\n          \"POST\",\r\n          JSON.stringify({\r\n            email: state.inputs.email.value,\r\n            password: state.inputs.password.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n          }\r\n        );\r\n\r\n        auth.login(res.userId, res.token, null, res.friendStatus);\r\n      } catch (error) {}\r\n    } else {\r\n      try {\r\n        const formData = new FormData();\r\n        formData.append(\"email\", state.inputs.email.value);\r\n        formData.append(\"password\", state.inputs.password.value);\r\n        formData.append(\"name\", state.inputs.name.value);\r\n        formData.append(\"image\", state.inputs.image.value);\r\n\r\n        const res = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\r\n          \"POST\",\r\n          formData\r\n        );\r\n\r\n        auth.login(res.userId, res.token);\r\n      } catch (error) {}\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      <Card className=\"authentication no-select\">\r\n        {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>Login Required</h2>\r\n        <hr />\r\n        <form onSubmit={authSubmitHandler}>\r\n          {/* social login */}\r\n          {socialLogin && (\r\n            <div>\r\n              <h3>Log in with</h3>\r\n              <a\r\n                className=\"socialBtn\"\r\n                href={`${process.env.REACT_APP_BACKEND_URL}/users/facebook`}\r\n              >\r\n                <FaFacebookF />\r\n                <span className=\"socialName\">Facebook</span>\r\n              </a>\r\n              {/*  */}\r\n              <a\r\n                className=\"socialBtn\"\r\n                href={`${process.env.REACT_APP_BACKEND_URL}/users/google`}\r\n              >\r\n                <FaGoogle />\r\n                <span className=\"socialName\">Google</span>\r\n              </a>\r\n              <h3>______or______</h3>\r\n            </div>\r\n          )}\r\n          {!isLoginMod && (\r\n            <Input\r\n              id=\"name\"\r\n              element=\"input\"\r\n              type=\"text\"\r\n              label=\"Your Name\"\r\n              validators={[VALIDATOR_REQUIRE()]}\r\n              errorText=\"Please enter a valid name\"\r\n              onInput={inputHandler}\r\n            />\r\n          )}\r\n          {!isLoginMod && (\r\n            <ImageUpload\r\n              center\r\n              id={\"image\"}\r\n              onInput={inputHandler}\r\n              errorText=\"Please provide an image\"\r\n            />\r\n          )}\r\n          <Input\r\n            id=\"email\"\r\n            element=\"input\"\r\n            type=\"email\"\r\n            label=\"Email\"\r\n            isLoading\r\n            validators={[VALIDATOR_EMAIL()]}\r\n            errorText=\"Please enter a valid email address\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Input\r\n            id=\"password\"\r\n            element=\"input\"\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            validators={[VALIDATOR_MINLENGTH(6)]}\r\n            errorText=\"Please enter a valid password, at least 6 characters.\"\r\n            onInput={inputHandler}\r\n          />\r\n          <Button type=\"submit\" disabled={!state.isValid}>\r\n            {isLoginMod ? \"LOGIN\" : \"SIGNUP\"}\r\n          </Button>\r\n          {isLoginMod && <Button to=\"/forgetpassword\">FORGOT PASSWORD</Button>}\r\n        </form>\r\n        <Button inverse onClick={switchModelHandler}>\r\n          SWITCH TO {isLoginMod ? \"SIGNUP\" : \"LOGIN\"}\r\n        </Button>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const changeHandeler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = event => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const inaialState = {\r\n    value: props.initailValue || \"\",\r\n    isValid: props.initailValid || false,\r\n    isTouched: false,\r\n  };\r\n  const [state, dispatch] = useReducer(inputReducer, inaialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = state;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div className={`form-control ${!state.isValid && state.isTouched && \"form-control--invalid\"}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!state.isValid && state.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useFrom = (initailInput, initailFormValidity) => {\r\n  const [state, dispatch] = useReducer(formReducer, {\r\n    inputs: initailInput,\r\n    isValid: initailFormValidity\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n  return [state, inputHandler, setFormData];\r\n};\r\n","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\nconst ImageUpload = ({ id, center, onInput, errorText }) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n  let pickedFile;\r\n  let fileIsValid = isValid;\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    if (event.target.files || event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    onInput(id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => filePickerRef.current.click();\r\n\r\n  return (\r\n    <div className='form-control'>\r\n      <input\r\n        ref={filePickerRef}\r\n        id={id}\r\n        style={{ display: \"none\" }}\r\n        type='file'\r\n        accept='.jpg,.png,.jpeg'\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${center && \"center\"}`}>\r\n        <div className='image-upload__preview'>\r\n          {previewUrl && <img src={previewUrl} alt='Preview' />}{\" \"}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type='button' onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"sourceRoot":""}