{"version":3,"sources":["places/pages/NewPlace.js","shared/Util/validators.js","shared/component/formElements/Input.js","shared/hooks/form-hook.js","shared/Util/constants.js","shared/component/formElements/ImageUpload.js"],"names":["NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useFrom","title","value","isValid","description","address","image","state","inputHandler","useState","tags","setTags","history","useHistory","handleTagChange","event","tagName","target","name","checked","oldTags","includes","filter","tag","placeSubmitHandler","a","preventDefault","formData","FormData","append","inputs","userId","process","Authorization","token","push","tagInputs","PLACE_TAGS","map","tagInput","key","onChange","inputProps","className","onClear","asOverlay","onSubmit","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","VALIDATOR_MINLENGTH","disabled","val","VALIDATOR_EMAIL","validate","validator","trim","length","test","inputReducer","action","isTouched","Input","props","changeHandeler","dispatch","touchHandler","inaialState","initailValue","initailValid","useReducer","useEffect","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initailInput","initailFormValidity","useCallback","inputData","formValidity","PLACE_TAG_TITLES","ImageUpload","pickedFile","center","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileIsValid","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","files","src","alt","onClick","current","click"],"mappings":"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","file":"static/js/15.32a11b80.chunk.js","sourcesContent":["import React, { useContext, Fragment, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport './NewPlace.css';\r\nimport Input from '../../shared/component/formElements/Input';\r\nimport Button from '../../shared/component/formElements/Button';\r\nimport {\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_MINLENGTH,\r\n} from '../../shared/Util/validators';\r\nimport useHttpClient from '../../shared/hooks/http-hook';\r\nimport { useFrom } from '../../shared/hooks/form-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModal from '../../shared/component/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/component/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/component/formElements/ImageUpload';\r\nimport { PLACE_TAGS } from '../../shared/Util/constants';\r\nimport { Checkbox } from '@material-ui/core';\r\n\r\nconst NewPlace = () => {\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [state, inputHandler] = useFrom(\r\n    {\r\n      title: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      address: {\r\n        value: '',\r\n        isValid: false,\r\n      },\r\n      image: {\r\n        value: null,\r\n        isValid: false,\r\n      },\r\n    },\r\n    false,\r\n  );\r\n  const [tags, setTags] = useState([]);\r\n  const history = useHistory();\r\n\r\n  const handleTagChange = event => {\r\n    const tagName = event.target.name;\r\n    const checked = event.target.checked;\r\n    if (checked) {\r\n      setTags(oldTags => {\r\n        return oldTags.includes(tagName) ? oldTags : [...oldTags, tagName];\r\n      });\r\n    } else {\r\n      setTags(oldTags => {\r\n        return oldTags.includes(tagName)\r\n          ? oldTags.filter(tag => tag !== tagName)\r\n          : oldTags;\r\n      });\r\n    }\r\n  };\r\n\r\n  const placeSubmitHandler = async event => {\r\n    event.preventDefault();\r\n    try {\r\n      const formData = new FormData();\r\n      formData.append('title', state.inputs.title.value);\r\n      formData.append('description', state.inputs.description.value);\r\n      formData.append('address', state.inputs.address.value);\r\n      formData.append('creator', auth.userId);\r\n      formData.append('image', state.inputs.image.value);\r\n      formData.append('tags', tags);\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\r\n        'POST',\r\n        formData,\r\n        {\r\n          Authorization: 'Bearer ' + auth.token,\r\n        },\r\n      );\r\n      history.push('/');\r\n    } catch (error) {}\r\n  };\r\n\r\n  const tagInputs = [];\r\n\r\n  PLACE_TAGS.map(tag => {\r\n    const checked = tags.includes(tag.name);\r\n    const tagInput = (\r\n      <span key={tag.name}>\r\n        <label>\r\n          <Checkbox\r\n            name={tag.name}\r\n            checked={checked}\r\n            onChange={handleTagChange}\r\n            inputProps={{ 'aria-label': 'primary checkbox' }}\r\n          />\r\n          {tag.title}\r\n        </label>\r\n        <span>&nbsp;&nbsp;</span>\r\n      </span>\r\n    );\r\n    tagInputs.push(tagInput);\r\n  });\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"fade-in\">\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <form className='place-form no-select' onSubmit={placeSubmitHandler}>\r\n        <Input\r\n          id=\"title\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Title\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid title\"\r\n          onInput={inputHandler}\r\n        />\r\n        <ImageUpload\r\n          id={'image'}\r\n          onInput={inputHandler}\r\n          errorText=\"Please provide an image\"\r\n        />\r\n        <Input\r\n          id=\"description\"\r\n          element=\"textarea\"\r\n          type=\"text\"\r\n          label=\"Description\"\r\n          validators={[VALIDATOR_MINLENGTH(5)]}\r\n          errorText=\"Please enter a valid description (at least 5 characters).\"\r\n          onInput={inputHandler}\r\n        />\r\n\r\n        <Input\r\n          id=\"address\"\r\n          element=\"input\"\r\n          type=\"text\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter a valid description address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        {tagInputs}\r\n        <Button type=\"submit\" disabled={!state.isValid}>\r\n          ADD PLACE\r\n        </Button>\r\n      </form>  \r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default NewPlace;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const changeHandeler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = event => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const inaialState = {\r\n    value: props.initailValue || \"\",\r\n    isValid: props.initailValid || false,\r\n    isTouched: false,\r\n  };\r\n  const [state, dispatch] = useReducer(inputReducer, inaialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = state;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div className={`form-control ${!state.isValid && state.isTouched && \"form-control--invalid\"}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!state.isValid && state.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useFrom = (initailInput, initailFormValidity) => {\r\n  const [state, dispatch] = useReducer(formReducer, {\r\n    inputs: initailInput,\r\n    isValid: initailFormValidity\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n  return [state, inputHandler, setFormData];\r\n};\r\n","export const PLACE_TAG_TITLES = {\r\n  'natural': 'Natural',\r\n  'historical': 'Historical',\r\n  'outdoor': 'Outdoor',\r\n  'touristic': 'Touristic',\r\n};\r\n\r\nexport const PLACE_TAGS = [\r\n  { name: 'natural', title: 'Natural' },\r\n  { name: 'historical', title: 'Historical' },\r\n  { name: 'outdoor', title: 'Outdoor' },\r\n  { name: 'touristic', title: 'Touristic'}\r\n];","import React, { useRef, useState, useEffect } from \"react\";\r\nimport \"./ImageUpload.css\";\r\nimport Button from \"./Button\";\r\nconst ImageUpload = ({ id, center, onInput, errorText }) => {\r\n  const [file, setFile] = useState();\r\n  const [previewUrl, setPreviewUrl] = useState();\r\n  const [isValid, setIsValid] = useState(false);\r\n  const filePickerRef = useRef();\r\n  let pickedFile;\r\n  let fileIsValid = isValid;\r\n\r\n  useEffect(() => {\r\n    if (!file) return;\r\n    const fileReader = new FileReader();\r\n    fileReader.onload = () => {\r\n      setPreviewUrl(fileReader.result);\r\n    };\r\n    fileReader.readAsDataURL(file);\r\n  }, [file]);\r\n\r\n  const pickedHandler = event => {\r\n    if (event.target.files || event.target.files.length === 1) {\r\n      pickedFile = event.target.files[0];\r\n      setFile(pickedFile);\r\n      setIsValid(true);\r\n      fileIsValid = true;\r\n    } else {\r\n      setIsValid(false);\r\n      fileIsValid = false;\r\n    }\r\n    onInput(id, pickedFile, fileIsValid);\r\n  };\r\n\r\n  const pickImageHandler = () => filePickerRef.current.click();\r\n\r\n  return (\r\n    <div className='form-control'>\r\n      <input\r\n        ref={filePickerRef}\r\n        id={id}\r\n        style={{ display: \"none\" }}\r\n        type='file'\r\n        accept='.jpg,.png,.jpeg'\r\n        onChange={pickedHandler}\r\n      />\r\n      <div className={`image-upload ${center && \"center\"}`}>\r\n        <div className='image-upload__preview'>\r\n          {previewUrl && <img src={previewUrl} alt='Preview' />}{\" \"}\r\n          {!previewUrl && <p>Please pick an image.</p>}\r\n        </div>\r\n        <Button type='button' onClick={pickImageHandler}>\r\n          PICK IMAGE\r\n        </Button>\r\n      </div>\r\n      {!isValid && <p>{errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageUpload;\r\n"],"sourceRoot":""}