{"version":3,"sources":["places/pages/UpdatePlace.js","shared/component/UIElements/Card.js","shared/Util/validators.js","shared/component/formElements/Input.js","shared/hooks/form-hook.js","shared/Util/constants.js"],"names":["UpdatePlace","auth","useContext","AuthContext","placeId","useParams","history","useHistory","useHttpClient","isLoading","error","sendRequest","clearError","useState","place","setPlace","tags","setTags","useFrom","title","value","isValid","description","state","inputHandler","setFormData","useEffect","a","process","data","getPlace","className","handleTagChange","event","tagName","target","name","checked","oldTags","includes","filter","tag","tagInputs","PLACE_TAGS","map","tagInput","key","onChange","inputProps","push","onClear","onSubmit","preventDefault","JSON","stringify","inputs","Authorization","token","userId","updatePlace","id","element","type","label","validators","VALIDATOR_REQUIRE","errorText","onInput","initailValue","initailValid","VALIDATOR_MINLENGTH","disabled","Card","props","style","children","val","VALIDATOR_EMAIL","validate","validator","trim","length","test","inputReducer","action","isTouched","Input","changeHandeler","dispatch","touchHandler","inaialState","useReducer","placeholder","onBlur","rows","htmlFor","formReducer","formIsValid","inputId","initailInput","initailFormValidity","useCallback","inputData","formValidity","PLACE_TAG_TITLES"],"mappings":"uSAkLeA,UAlKK,WAClB,IAAMC,EAAOC,qBAAWC,KAElBC,EAAUC,cAAYD,QACtBE,EAAUC,cAJQ,EAM8BC,cAA9CC,EANgB,EAMhBA,UAAWC,EANK,EAMLA,MAAOC,EANF,EAMEA,YAAaC,EANf,EAMeA,WANf,EAOEC,qBAPF,mBAOjBC,EAPiB,KAOVC,EAPU,OAQAF,qBARA,mBAQjBG,EARiB,KAQXC,EARW,OASmBC,YACzC,CACEC,MAAO,CACLC,MAAO,GACPC,SAAS,GAEXC,YAAa,CACXF,MAAO,GACPC,SAAS,KAGb,GApBsB,mBASjBE,EATiB,KASVC,EATU,KASIC,EATJ,KA+CxB,GAxBAC,qBAAU,YACM,uCAAG,4BAAAC,EAAA,+EAEMhB,EAAY,GAAD,OAAIiB,wCAAJ,mBAAgDxB,IAFjE,OAEPyB,EAFO,OAGbd,EAASc,EAAKf,OACdG,EAAQY,EAAKf,MAAME,MACnBS,EACE,CACEN,MAAO,CACLC,MAAOS,EAAKf,MAAMK,MAClBE,SAAS,GAEXC,YAAa,CACXF,MAAOS,EAAKf,MAAMQ,YAClBD,SAAS,KAGb,GAhBW,yGAAH,qDAoBdS,KACC,CAACnB,EAAaP,EAASqB,IAEtBhB,EACF,OACE,yBAAKsB,UAAU,UACb,kBAAC,IAAD,OAIN,IAAKjB,IAAUJ,EACb,OACE,yBAAKqB,UAAU,UACb,kBAAC,IAAD,KACE,uDAMR,IAAMC,EAAkB,SAAAC,GACtB,IAAMC,EAAUD,EAAME,OAAOC,KAEvBC,EAAUJ,EAAME,OAAOE,QAE3BpB,EADEoB,EACM,SAAAC,GACN,OAAOA,EAAQC,SAASL,GAAWI,EAA5B,sBAA0CA,GAA1C,CAAmDJ,KAGpD,SAAAI,GACN,OAAOA,EAAQC,SAASL,GACpBI,EAAQE,QAAO,SAAAC,GAAG,OAAIA,IAAQP,KAC9BI,KA2BJI,EAAY,GAuBlB,OArBI5B,GACF6B,IAAWC,KAAI,SAAAH,GACb,IAAMJ,EAAUrB,GAAQA,EAAKuB,SAASE,EAAIL,MACpCS,EACJ,0BAAMC,IAAKL,EAAIL,MACb,+BACE,kBAAC,IAAD,CACEA,KAAMK,EAAIL,KACVC,UAAWA,EACXU,SAAUf,EACVgB,WAAY,CAAE,aAAc,sBAE7BP,EAAItB,OAEP,2CAGJuB,EAAUO,KAAKJ,MAKjB,kBAAC,WAAD,KACE,kBAAC,IAAD,CAAYnC,MAAOA,EAAOwC,QAAStC,KACjCH,GAAaK,GACb,0BAAMiB,UAAU,uBAAuBoB,SAjDZ,SAAAlB,GAC/BA,EAAMmB,iBACW,uCAAG,sBAAAzB,EAAA,+EAEVhB,EAAY,GAAD,OACZiB,wCADY,mBACgCxB,GAC/C,QACAiD,KAAKC,UAAU,CACbnC,MAAOI,EAAMgC,OAAOpC,MAAMC,MAC1BE,YAAaC,EAAMgC,OAAOjC,YAAYF,QAExC,CACE,eAAgB,mBAChBoC,cAAe,UAAYvD,EAAKwD,QAXpB,OAchBnD,EAAQ2C,KAAK,IAAMhD,EAAKyD,OAAS,WAdjB,uGAAH,oDAiBjBC,KA+BM,kBAAC,IAAD,CACEC,GAAG,QACHC,QAAQ,QACRC,KAAK,OACLC,MAAM,QACNC,WAAY,CAACC,eACbC,UAAU,8BACVC,QAAS3C,EACT4C,aAActD,EAAMK,MACpBkD,cAAc,IAEhB,kBAAC,IAAD,CACET,GAAG,cACHC,QAAQ,WACRE,MAAM,cACNC,WAAY,CAACM,YAAoB,IACjCJ,UAAU,wDACVC,QAAS3C,EACT4C,aAActD,EAAMQ,YACpB+C,cAAc,IAEf3B,EACD,kBAAC,IAAD,CAAQoB,KAAK,SAASS,UAAWhD,EAAMF,SAAvC,oB,gCCzKV,0BAYemD,IARF,SAAAC,GACX,OACE,yBAAK1C,UAAS,eAAU0C,EAAM1C,WAAa2C,MAAOD,EAAMC,OACrDD,EAAME,Y,oLCCAV,EAAoB,iBAAO,CAAEH,KARX,YAUlBQ,EAAsB,SAAAM,GAAG,MAAK,CACzCd,KAV+B,YAW/Bc,IAAKA,IAQMC,EAAkB,iBAAO,CAAEf,KAfX,UAiBhBgB,EAAW,SAAC1D,EAAO4C,GAC9B,IAD6C,EACzC3C,GAAU,EAD+B,cAErB2C,GAFqB,IAE7C,2BAAoC,CAAC,IAA1Be,EAAyB,QAxBP,YAyBvBA,EAAUjB,OACZzC,EAAUA,GAAWD,EAAM4D,OAAOC,OAAS,GAzBhB,cA2BzBF,EAAUjB,OACZzC,EAAUA,GAAWD,EAAM4D,OAAOC,QAAUF,EAAUH,KA3B3B,cA6BzBG,EAAUjB,OACZzC,EAAUA,GAAWD,EAAM4D,OAAOC,QAAUF,EAAUH,KA7BjC,QA+BnBG,EAAUjB,OACZzC,EAAUA,IAAYD,GAAS2D,EAAUH,KA/BpB,QAiCnBG,EAAUjB,OACZzC,EAAUA,IAAYD,GAAS2D,EAAUH,KAjClB,UAmCrBG,EAAUjB,OACZzC,EAAUA,GAAW,iBAAiB6D,KAAK9D,KAnBF,8BAsB7C,OAAOC,I,gGCzCH8D,G,MAAe,SAAC5D,EAAO6D,GAC3B,OAAQA,EAAOtB,MACb,IAAK,SACH,OAAO,eACFvC,EADL,CAEEH,MAAOgE,EAAOR,IACdvD,QAASyD,YAASM,EAAOR,IAAKQ,EAAOpB,cAEzC,IAAK,QACH,OAAO,eACFzC,EADL,CAEE8D,WAAW,IAGf,QACE,OAAO9D,KAyDE+D,IArDD,SAAAb,GACZ,IAAMc,EAAiB,SAAAtD,GACrBuD,EAAS,CACP1B,KAAM,SACNc,IAAK3C,EAAME,OAAOf,MAClB4C,WAAYS,EAAMT,cAGhByB,EAAe,SAAAxD,GACnBuD,EAAS,CAAE1B,KAAM,WAEb4B,EAAc,CAClBtE,MAAOqD,EAAML,cAAgB,GAC7B/C,QAASoD,EAAMJ,eAAgB,EAC/BgB,WAAW,GAdQ,EAgBKM,qBAAWR,EAAcO,GAhB9B,mBAgBdnE,EAhBc,KAgBPiE,EAhBO,KAkBb5B,EAAgBa,EAAhBb,GAAIO,EAAYM,EAAZN,QACJ/C,EAAmBG,EAAnBH,MAAOC,EAAYE,EAAZF,QACfK,qBAAU,WACRyC,EAAQP,EAAIxC,EAAOC,KAClB,CAACuC,EAAIxC,EAAOC,EAAS8C,IAExB,IAAMN,EACc,UAAlBY,EAAMZ,QACJ,2BACED,GAAIa,EAAMb,GACVE,KAAMW,EAAMX,KACZ8B,YAAanB,EAAMmB,YACnB7C,SAAUwC,EACVM,OAAQJ,EACRrE,MAAOG,EAAMH,QAGf,8BACEwC,GAAIa,EAAMb,GACVkC,KAAMrB,EAAMqB,MAAQ,EACpB/C,SAAUwC,EACVM,OAAQJ,EACRrE,MAAOG,EAAMH,QAInB,OACE,yBAAKW,UAAS,wBAAmBR,EAAMF,SAAWE,EAAM8D,WAAa,0BACnE,2BAAOU,QAAStB,EAAMb,IAAKa,EAAMV,OAChCF,GACCtC,EAAMF,SAAWE,EAAM8D,WAAa,2BAAIZ,EAAMP,c,oGCpEhD8B,EAAc,SAACzE,EAAO6D,GAC1B,OAAQA,EAAOtB,MACb,IAAK,eACH,IAAImC,GAAc,EAClB,IAAK,IAAMC,KAAW3E,EAAMgC,OACrBhC,EAAMgC,OAAO2C,KAIhBD,EADEC,IAAYd,EAAOc,QACPD,GAAeb,EAAO/D,QAEtB4E,GAAe1E,EAAMgC,OAAO2C,GAAS7E,SAGvD,OAAO,eACFE,EADL,CAEEgC,OAAO,eACFhC,EAAMgC,OADL,eAEH6B,EAAOc,QAAU,CAAE9E,MAAOgE,EAAOhE,MAAOC,QAAS+D,EAAO/D,WAE3DA,QAAS4E,IAEb,IAAK,WACH,OAAO,eACF1E,EADL,CAEEgC,OAAQ6B,EAAO7B,OACflC,QAAS+D,EAAOa,cAEpB,QACE,OAAO1E,IAIAL,EAAU,SAACiF,EAAcC,GAAyB,IAAD,EAClCT,qBAAWK,EAAa,CAChDzC,OAAQ4C,EACR9E,QAAS+E,IAHiD,mBACrD7E,EADqD,KAC9CiE,EAD8C,KAoB5D,MAAO,CAACjE,EAfa8E,uBAAY,SAACzC,EAAIxC,EAAOC,GAC3CmE,EAAS,CACP1B,KAAM,eACN1C,MAAOA,EACPC,QAASA,EACT6E,QAAStC,MAEV,IACiByC,uBAAY,SAACC,EAAWC,GAC1Cf,EAAS,CACP1B,KAAM,WACNP,OAAQ+C,EACRL,YAAaM,MAEd,O,qDCtDL,oEAAO,IAAMC,EAAmB,CAC9B,QAAW,UACX,WAAc,aACd,QAAW,UACX,UAAa,aAGF7D,EAAa,CACxB,CAAEP,KAAM,UAAWjB,MAAO,WAC1B,CAAEiB,KAAM,aAAcjB,MAAO,cAC7B,CAAEiB,KAAM,UAAWjB,MAAO,WAC1B,CAAEiB,KAAM,YAAajB,MAAO","file":"static/js/16.64a75073.chunk.js","sourcesContent":["\r\nimport React, { useEffect, useState, Fragment, useContext } from \"react\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport Input from \"../../shared/component/formElements/Input\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { VALIDATOR_REQUIRE, VALIDATOR_MINLENGTH } from \"../../shared/Util/validators\";\r\nimport { useFrom } from \"../../shared/hooks/form-hook\";\r\nimport { PLACE_TAGS } from \"../../shared/Util/constants\";\r\nimport Checkbox from \"@material-ui/core/Checkbox\";\r\nimport \"./NewPlace.css\";\r\n\r\nconst UpdatePlace = () => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  const placeId = useParams().placeId;\r\n  const history = useHistory();\r\n\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const [place, setPlace] = useState();\r\n  const [tags, setTags] = useState();\r\n  const [state, inputHandler, setFormData] = useFrom(\r\n    {\r\n      title: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n      description: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false,\r\n  );\r\n\r\n  useEffect(() => {\r\n    const getPlace = async () => {\r\n      try {\r\n        const data = await sendRequest(`${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`);\r\n        setPlace(data.place);\r\n        setTags(data.place.tags);\r\n        setFormData(\r\n          {\r\n            title: {\r\n              value: data.place.title,\r\n              isValid: true,\r\n            },\r\n            description: {\r\n              value: data.place.description,\r\n              isValid: true,\r\n            },\r\n          },\r\n          true,\r\n        );\r\n      } catch (error) {}\r\n    };\r\n    getPlace();\r\n  }, [sendRequest, placeId, setFormData]);\r\n\r\n  if (isLoading)\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n\r\n  if (!place && !error) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>Could not find place!</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const handleTagChange = event => {\r\n    const tagName = event.target.name;\r\n\r\n    const checked = event.target.checked;\r\n    if (checked) {\r\n      setTags(oldTags => {\r\n        return oldTags.includes(tagName) ? oldTags : [...oldTags, tagName];\r\n      });\r\n    } else {\r\n      setTags(oldTags => {\r\n        return oldTags.includes(tagName)\r\n          ? oldTags.filter(tag => tag !== tagName)\r\n          : oldTags;\r\n      });\r\n    }\r\n  };\r\n\r\n  const placeUpdateSubmitHandler = event => {\r\n    event.preventDefault();\r\n    const updatePlace = async () => {\r\n      try {\r\n        await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\r\n          'PATCH',\r\n          JSON.stringify({\r\n            title: state.inputs.title.value,\r\n            description: state.inputs.description.value,\r\n          }),\r\n          {\r\n            \"Content-Type\": \"application/json\",\r\n            Authorization: \"Bearer \" + auth.token,\r\n          },\r\n        );\r\n        history.push('/' + auth.userId + '/places');\r\n      } catch (error) {}\r\n    };\r\n    updatePlace();\r\n  };\r\n\r\n  const tagInputs = [];\r\n\r\n  if (place) {\r\n    PLACE_TAGS.map(tag => {\r\n      const checked = tags && tags.includes(tag.name);\r\n      const tagInput = (\r\n        <span key={tag.name}>\r\n          <label>\r\n            <Checkbox\r\n              name={tag.name}\r\n              checked={!!checked}\r\n              onChange={handleTagChange}\r\n              inputProps={{ 'aria-label': 'primary checkbox' }}\r\n            />\r\n            {tag.title}\r\n          </label>\r\n          <span>&nbsp;&nbsp;</span>\r\n        </span>\r\n      );\r\n      tagInputs.push(tagInput);\r\n    });\r\n  }\r\n\r\n  return (\r\n    <Fragment>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && place && (\r\n        <form className='place-form no-select' onSubmit={placeUpdateSubmitHandler}>\r\n          <Input\r\n            id=\"title\"\r\n            element=\"input\"\r\n            type=\"text\"\r\n            label=\"Title\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a valid title.\"\r\n            onInput={inputHandler}\r\n            initailValue={place.title}\r\n            initailValid={true}\r\n          />\r\n          <Input\r\n            id=\"description\"\r\n            element=\"textarea\"\r\n            label=\"Description\"\r\n            validators={[VALIDATOR_MINLENGTH(5)]}\r\n            errorText=\"Please enter a valid description (min. 5 characters).\"\r\n            onInput={inputHandler}\r\n            initailValue={place.description}\r\n            initailValid={true}\r\n          />\r\n          {tagInputs}\r\n          <Button type=\"submit\" disabled={!state.isValid}>\r\n            UPDATE PLACE\r\n          </Button>\r\n        </form>\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default UpdatePlace;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const changeHandeler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = event => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const inaialState = {\r\n    value: props.initailValue || \"\",\r\n    isValid: props.initailValid || false,\r\n    isTouched: false,\r\n  };\r\n  const [state, dispatch] = useReducer(inputReducer, inaialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = state;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div className={`form-control ${!state.isValid && state.isTouched && \"form-control--invalid\"}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!state.isValid && state.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useFrom = (initailInput, initailFormValidity) => {\r\n  const [state, dispatch] = useReducer(formReducer, {\r\n    inputs: initailInput,\r\n    isValid: initailFormValidity\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n  return [state, inputHandler, setFormData];\r\n};\r\n","export const PLACE_TAG_TITLES = {\r\n  'natural': 'Natural',\r\n  'historical': 'Historical',\r\n  'outdoor': 'Outdoor',\r\n  'touristic': 'Touristic',\r\n};\r\n\r\nexport const PLACE_TAGS = [\r\n  { name: 'natural', title: 'Natural' },\r\n  { name: 'historical', title: 'Historical' },\r\n  { name: 'outdoor', title: 'Outdoor' },\r\n  { name: 'touristic', title: 'Touristic'}\r\n];"],"sourceRoot":""}