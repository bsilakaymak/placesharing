{"version":3,"sources":["places/components/BucketListItem.js","places/components/BucketList.js"],"names":["BucketListItem","bucket","deleteBucket","useState","showDetails","setShowDetails","isVisited","visitStyle","setVisitStyle","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","id","userId","useParams","closeDetailsHandler","deleteFromBucketList","a","process","_id","Authorization","token","visitedPlace","ErrorModal","onClear","LoadingSpinner","asOverlay","className","Modal","show","onCancel","header","name","contentClass","footerClass","footer","Button","onClick","style","width","src","image","imageUrl","alt","fontSize","title","description","address","to","creator","createdBy","textDecoration","size","danger","inverse","BucketList","places","setPlaces","prevPlaces","filter","place","useEffect","data","userWithBucketList","getBucketList","user","setUser","getUser","href","encodeURIComponent","Fragment","length","flexDirection","map","index","key"],"mappings":"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","file":"static/js/19.3fcb3998.chunk.js","sourcesContent":["import React, { useState, useContext, Fragment } from \"react\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport Modal from \"../../shared/component/UIElements/Modal\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport \"./BucketListItem.css\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport { Link, useParams } from \"react-router-dom\";\r\n\r\nconst BucketListItem = ({ bucket, deleteBucket }) => {\r\n  const [showDetails, setShowDetails] = useState(false);\r\n  const [visitStyle, setVisitStyle] = useState(bucket.isVisited);\r\n  const auth = useContext(AuthContext);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const { id } = bucket;\r\n  const { userId } = useParams();\r\n  const openDetailsHandler = () => {\r\n    setShowDetails(true);\r\n  };\r\n  const closeDetailsHandler = () => {\r\n    setShowDetails(false);\r\n  };\r\n\r\n  const deleteFromBucketList = async () => {\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/bucketlist/${bucket.id._id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + auth.token\r\n        }\r\n      );\r\n      deleteBucket(bucket.id._id);\r\n    } catch (err) {}\r\n  };\r\n\r\n  const visitedPlace = async () => {\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/bucketlist/${bucket.id._id}`,\r\n        \"PUT\",\r\n        null,\r\n        {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: \"Bearer \" + auth.token\r\n        }\r\n      );\r\n    } catch (error) {}\r\n  };\r\n  if (error) return <ErrorModal error={error} onClear={clearError} />;\r\n  return (\r\n    <Fragment>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n\r\n      <div className=\"bucket-list-item no-select\">\r\n        <Modal\r\n          show={showDetails}\r\n          onCancel={closeDetailsHandler}\r\n          header={bucket.name}\r\n          contentClass=\"place-item__modal-content\"\r\n          footerClass=\"place-item__actions\"\r\n          footer={<Button onClick={closeDetailsHandler}>Close</Button>}\r\n        >\r\n          <div className=\"detail-item\">\r\n            <div className=\"bucket-image\">\r\n              <img\r\n                style={{ width: \"100%\" }}\r\n                src={id.image.imageUrl}\r\n                alt=\"bucket-place\"\r\n              ></img>\r\n            </div>\r\n\r\n            <div className=\"bucket-info\">\r\n              <p style={{ fontSize: \"1.5em\" }}>{id.title}</p>\r\n              <p>{id.description}</p>\r\n              <p>Address: {id.address}</p>\r\n              <p className=\"bucket-creator\">\r\n                {\" \"}\r\n                <strong>Shared by:</strong>{\" \"}\r\n                <Link to={`/${id.creator}/places`}>{bucket.createdBy}</Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n        <p style={{ textDecoration: visitStyle ? \"line-through\" : \"none\" }}>\r\n          {bucket && bucket.id.title}\r\n        </p>\r\n        {userId === auth.userId && (\r\n          <Button\r\n            size=\"mobile\"\r\n            danger\r\n            onClick={() => {\r\n              deleteFromBucketList();\r\n            }}\r\n          >\r\n            Delete\r\n          </Button>\r\n        )}\r\n\r\n        <Button size=\"mobile\" onClick={() => openDetailsHandler()}>\r\n          Show Details\r\n        </Button>\r\n        {userId === auth.userId && (\r\n          <Button\r\n            size=\"mobile\"\r\n            inverse\r\n            onClick={() => {\r\n              setVisitStyle(!visitStyle);\r\n              visitedPlace();\r\n            }}\r\n          >\r\n            {visitStyle ? \"Not Visited\" : \"Visited\"}\r\n          </Button>\r\n        )}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default BucketListItem;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport BucketListItem from \"./BucketListItem\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport \"./BucketList.css\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\n\r\nconst BucketList = () => {\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n\r\n  const [places, setPlaces] = useState();\r\n  const { userId } = useParams();\r\n  const auth = useContext(AuthContext);\r\n  const deleteFromBucketList = (id) => {\r\n    setPlaces((prevPlaces) =>\r\n      prevPlaces.filter((place) => place.id._id !== id)\r\n    );\r\n  };\r\n  useEffect(() => {\r\n    const getBucketList = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/user/bucketlist?q=${userId}`\r\n        );\r\n        setPlaces(data.userWithBucketList);\r\n      } catch (err) {}\r\n    };\r\n    getBucketList();\r\n  }, [sendRequest, userId]);\r\n  const [user, setUser] = useState();\r\n  useEffect(() => {\r\n    const getUser = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/users/${userId}/`\r\n        );\r\n        setUser(data);\r\n      } catch (err) {}\r\n    };\r\n    getUser();\r\n  }, [sendRequest, userId]);\r\n\r\n  if (error) {\r\n    return <ErrorModal error={error} onClear={clearError} header={`Hey!`} />;\r\n  }\r\n  if (isLoading)\r\n    return (\r\n      <div className=\"center\">\r\n        <LoadingSpinner />\r\n      </div>\r\n    );\r\n  else {\r\n    return (\r\n      <div>\r\n        {userId === auth.userId && (\r\n          <div className=\"share-box  no-select\">\r\n            <div className=\"share-button\">\r\n              <a\r\n                href={`https://twitter.com/intent/tweet?url=${encodeURIComponent(\r\n                  `${process.env.REACT_APP_PUBLIC_URL}/${userId}/bucketlist`\r\n                )}&text=My+Travel+Bucket+List%2C+Connect+and+Explore.&hashtags=travelling,wanderlust,yourplacesapp`}\r\n              >\r\n                <i className=\"fab fa-twitter-square\"></i>\r\n              </a>\r\n              <a\r\n                href={`https://www.facebook.com/sharer.php?u=${encodeURIComponent(\r\n                  `${process.env.REACT_APP_PUBLIC_URL}/${userId}/bucketlist`\r\n                )}`}\r\n              >\r\n                <i className=\"fab fa-facebook-square\"></i>\r\n              </a>\r\n            </div>\r\n            <p>SHARE</p>\r\n          </div>\r\n        )}\r\n        <React.Fragment>\r\n          <div className=\"bucket-list-content\">\r\n            <div className=\"m-b-2\">\r\n              <h2 className=\" white-text fade-in no-select center\">\r\n                Bucket List of{\" \"}\r\n                <span className=\"m-05 yellow-text\">\r\n                  {\" \"}\r\n                  {user && user.user.name}\r\n                </span>{\" \"}\r\n              </h2>\r\n            </div>\r\n            {places && places.length === 0 && auth.userId === userId && (\r\n              <h2\r\n                className=\"center white-text fade-in\"\r\n                style={{ flexDirection: \"column\" }}\r\n              >\r\n                You don't have any places in your bucket list. Maybe check some\r\n                places?\r\n                <Link to=\"/\"> Go to home</Link>\r\n              </h2>\r\n            )}\r\n            {auth.userId !== userId && places && places.length === 0 && (\r\n              <h2 className=\"center white-text fade-in\">\r\n                This user does not have any places in their bucket list\r\n              </h2>\r\n            )}\r\n\r\n            {places &&\r\n              places.map((bucket, index) => {\r\n                return (\r\n                  <BucketListItem\r\n                    bucket={bucket}\r\n                    key={index}\r\n                    index={index}\r\n                    deleteBucket={deleteFromBucketList}\r\n                  />\r\n                );\r\n              })}\r\n          </div>\r\n        </React.Fragment>\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nexport default BucketList;\r\n"],"sourceRoot":""}