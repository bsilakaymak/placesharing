{"version":3,"sources":["shared/context/auth-context.js","shared/component/UIElements/LoadingSpinner.js","shared/component/UIElements/Backdrop.js","shared/hooks/http-hook.js","shared/component/UIElements/ErrorModal.js","shared/component/formElements/Button.js","shared/context/message-context.js","shared/component/UIElements/Modal.js","shared/hooks/auth-hook.js","shared/component/Navigation/MainHeader.js","shared/component/Navigation/SideDrawer.js","shared/component/Navigation/SearchBar.js","shared/component/Navigation/NavLinks.js","shared/component/Navigation/MainNavigation.js","users/pages/Social.js","search/components/ResultItem.js","search/components/ResultsList.js","search/pages/Search.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","token","userId","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","useHttpClient","useState","isLoading","setIsLoading","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","body","headers","httpAbortCtrl","AbortController","current","push","fetch","signal","res","json","data","filter","reqCtrl","ok","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ErrorModal","onClear","header","onCancel","show","footer","Button","href","size","inverse","danger","children","to","exact","type","disabled","MessageContext","messagesData","id","ModalOverlay","content","style","headerClass","onSubmit","e","preventDefault","contentClass","footerClass","Modal","in","mountOnEnter","unmountOnExit","timeout","classNames","logoutTimer","MainHeader","SideDrawer","CSSTransition","SearchBar","searchValue","setSearchValue","history","useHistory","length","name","placeholder","value","onChange","target","NavLinks","auth","useContext","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","Social","URL","window","location","searchParams","get","uId","socialLog","ResultItem","place","item","_id","title","user","ResultsList","items","placesExist","places","usersExist","users","Fragment","map","key","Search","results","setResults","query","process","console","getResults","Messages","React","lazy","ForgetPassword","ResetEmail","Auth","UserProfileNav","User","Users","Friends","NewPlace","UserPlaces","UpdatePlace","BucketList","Place","RegisterConfirmation","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","JSON","stringify","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","useAuth","path","component","withRouter","Provider","fallback","render"],"mappings":"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","file":"static/js/main.c6e995fe.chunk.js","sourcesContent":["import { createContext } from \"react\";\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  token: null,\r\n  userId: null,\r\n  login: () => {},\r\n  logout: () => {},\r\n});\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\nconst useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n    setIsLoading(true);\r\n    const httpAbortCtrl = new AbortController();\r\n    activeHttpRequests.current.push(httpAbortCtrl);\r\n    try {\r\n      const res = await fetch(url, {\r\n        method,\r\n        body,\r\n        headers,\r\n        signal: httpAbortCtrl.signal,\r\n      });\r\n      const data = await res.json();\r\n      activeHttpRequests.current = activeHttpRequests.current.filter(\r\n        reqCtrl => reqCtrl !== httpAbortCtrl,\r\n      );\r\n      if (!res.ok) {\r\n        throw new Error(data.message);\r\n      }\r\n      setIsLoading(false);\r\n      return data;\r\n    } catch (error) {\r\n      setError(error.message || 'Something went wrong, please try again.');\r\n      setIsLoading(false);\r\n      throw error;\r\n    }\r\n  }, []);\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  useEffect(() => {\r\n    return () => {\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\nexport default useHttpClient;\r\n","import React from \"react\";\r\n\r\nimport Modal from \"./Modal\";\r\nimport Button from \"../formElements/Button\";\r\n\r\nconst ErrorModal = ({ error, onClear, header }) => {\r\n  return (\r\n    <Modal\r\n      onCancel={onClear}\r\n      header={header || \"An Error Occurred!!!\"}\r\n      show={!!error}\r\n      footer={<Button onClick={onClear}>Okay</Button>}\r\n    >\r\n      <div>{error}</div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import { createContext } from \"react\";\r\nexport const MessageContext = createContext({\r\n  messagesData: [], // to set all the messages involving the id below\r\n  id: \"\", // to set the texted person object id\r\n});\r\n","import React, { Fragment } from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./Modal.css\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport Backdrop from \"./Backdrop\";\r\nconst Modal = props => {\r\n  return (\r\n    <Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames='modal'\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </Fragment>\r\n  );\r\n};\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={props.onSubmit ? props.onSubmit : e => e.preventDefault()}\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById(\"modal-hook\"));\r\n};\r\n\r\nexport default Modal;\r\n","import { useState, useEffect, useCallback } from 'react';\r\n\r\nlet logoutTimer;\r\n\r\nexport const useAuth = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate = expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token,\r\n        expiration: tokenExpirationDate.toISOString(),\r\n      }),\r\n    );\r\n  }, []);\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (storedData && storedData.token && new Date(storedData.expiration) > new Date()) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n  return { token, login, logout, userId };\r\n};\r\n","import React from \"react\";\r\n\r\nimport \"./MainHeader.css\";\r\n\r\nconst MainHeader = props => {\r\n  return <header className='main-header'>{props.children}</header>;\r\n};\r\n\r\nexport default MainHeader;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\nimport \"./SideDrawer.css\";\r\nconst SideDrawer = props => {\r\n  const content = (\r\n    <CSSTransition\r\n      in={props.show}\r\n      timeout={200}\r\n      classNames='slide-in-left'\r\n      mountOnEnter\r\n      unmountOnExit\r\n    >\r\n      <aside className='side-drawer' onClick={props.onClick}>\r\n        {props.children}\r\n      </aside>\r\n    </CSSTransition>\r\n  );\r\n  return ReactDOM.createPortal(\r\n    content,\r\n    document.getElementById(\"drawer-hooks\")\r\n  );\r\n};\r\n\r\nexport default SideDrawer;\r\n","import React, { useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = props => {\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const history = useHistory();\r\n\r\n  const submitHandler = e => {\r\n    e.preventDefault();\r\n    if (searchValue.length > 0) {\r\n      history.push(`/search?q=${searchValue}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form className='search-bar__form' onSubmit={submitHandler}>\r\n      <input\r\n        className='search-bar__text'\r\n        type='text'\r\n        name='search'\r\n        placeholder='Search...'\r\n        value={searchValue}\r\n        onChange={e => {\r\n          setSearchValue(e.target.value);\r\n        }}\r\n      />\r\n      <button className='search-bar__submit' type='submit'>\r\n        <i className='fas fa-search'></i>\r\n      </button>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { useContext } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport \"./NavLinks.css\";\r\nimport { AuthContext } from \"../../context/auth-context\";\r\nimport SearchBar from \"./SearchBar\";\r\nconst NavLinks = props => {\r\n  const auth = useContext(AuthContext);\r\n\r\n  return (\r\n    <ul className=\"nav-links no-select\">\r\n      <li>\r\n        <NavLink to='/' exact>\r\n          ALL USERS\r\n        </NavLink>\r\n      </li>\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to='/places/new'>ADD PLACES</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to={`/${auth.userId}/my`}>MY</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <SearchBar />\r\n        </li>\r\n      )}\r\n      {!auth.isLoggedIn && (\r\n        <li>\r\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\r\n        </li>\r\n      )}\r\n      {auth.isLoggedIn && (\r\n        <li>\r\n          <button onClick={auth.logout}>LOGOUT</button>\r\n        </li>\r\n      )}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default NavLinks;\r\n","import React, { Fragment, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport MainHeader from './MainHeader';\r\nimport SideDrawer from './SideDrawer';\r\nimport NavLinks from './NavLinks';\r\nimport Backdrop from '../UIElements/Backdrop';\r\nimport './MainNavigation.css';\r\n\r\nconst MainNavigation = props => {\r\n\tconst [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\tconst openDrawerHandler = () => {\r\n\t\tsetDrawerIsOpen(true);\r\n\t};\r\n\tconst closeDrawerHandler = () => {\r\n\t\tsetDrawerIsOpen(false);\r\n\t};\r\n\treturn (\r\n\t\t<Fragment>\r\n\t\t\t{drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n\r\n\t\t\t<SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}>\r\n\t\t\t\t<nav className=\"main-navigation__drawer-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</SideDrawer>\r\n\r\n\t\t\t<MainHeader>\r\n\t\t\t\t<button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t\t<span />\r\n\t\t\t\t</button>\r\n\t\t\t\t<h1 className=\"main-navigation__title no-select\">\r\n\t\t\t\t\t<Link to=\"/\">YourPlaces</Link>\r\n\t\t\t\t</h1>\r\n\t\t\t\t<nav className=\"main-navigation__header-nav\">\r\n\t\t\t\t\t<NavLinks />\r\n\t\t\t\t</nav>\r\n\t\t\t</MainHeader>\r\n\t\t</Fragment>\r\n\t);\r\n};\r\n\r\nexport default MainNavigation;\r\n","import { useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\n\r\nexport default function Social() {\r\n  const auth = useContext(AuthContext);\r\n  const socialLog = () => {\r\n    const token = new URL(window.location).searchParams.get(\"token\");\r\n    const uId = new URL(window.location).searchParams.get(\"userId\");\r\n    auth.login(uId, token);\r\n  };\r\n  useEffect(() => {\r\n    socialLog();\r\n  });\r\n  return null;\r\n}\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"./ResultItem.css\";\r\n\r\nexport default function ResultItem(props) {\r\n  return (\r\n    <div>\r\n      {props.place && (\r\n        <div>\r\n          <Link to={`/places/${props.item._id}`}>\r\n            <p className='search-result__name'>{props.item.title}</p>\r\n          </Link>\r\n        </div>\r\n      )}\r\n      {props.user && (\r\n        <div>\r\n          <Link to={`/${props.item._id}/places`}>\r\n            <p className='search-result__name'>{props.item.name}</p>\r\n          </Link>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ResultsList.css\";\r\nimport ResultItem from \"./ResultItem\";\r\n\r\nexport default function ResultsList({ items }) {\r\n  const placesExist = items && items.places && items.places.length;\r\n  const usersExist = items && items.users && items.users.length;\r\n\r\n  return (\r\n    <div>\r\n      {placesExist ? (\r\n        <React.Fragment>\r\n          <h4 className='search-headers'>PLACES</h4>\r\n          {items.places.map(item => (\r\n            <ResultItem key={item.id} item={item} place />\r\n          ))}\r\n        </React.Fragment>\r\n      ) : (\r\n        <p>No places found</p>\r\n      )}\r\n\r\n      {usersExist ? (\r\n        <React.Fragment>\r\n          <h4 className='search-headers'>USERS</h4>\r\n          {items.users.map(item => (\r\n            <ResultItem key={item.id} item={item} user />\r\n          ))}\r\n        </React.Fragment>\r\n      ) : (\r\n        <p>No users found</p>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./Search.css\";\r\n\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport ResultsList from \"../components/ResultsList\";\r\n\r\nexport default function Search() {\r\n  const [results, setResults] = useState({});\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  let query = new URL(window.location).searchParams.get(\"q\");\r\n\r\n  useEffect(() => {\r\n    const getResults = async () => {\r\n      try {\r\n        const data = await sendRequest(\r\n          `${process.env.REACT_APP_BACKEND_URL}/search?q=${query}`\r\n        );\r\n\r\n        setResults(data.results);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n    getResults();\r\n  }, [query]);\r\n\r\n  return (\r\n    <div className='search__page'>\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {isLoading && (\r\n        <div className='center'>\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && results && <ResultsList items={results} />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { Suspense, useState } from \"react\";\r\nimport { BrowserRouter as Router, Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport MainNavigation from \"./shared/component/Navigation/MainNavigation\";\r\nimport { AuthContext } from \"./shared/context/auth-context\";\r\nimport { MessageContext } from \"./shared/context/message-context\";\r\nimport { useAuth } from \"./shared/hooks/auth-hook\";\r\nimport LoadingSpinner from \"./shared/component/UIElements/LoadingSpinner\";\r\nimport Social from \"./users/pages/Social\";\r\nimport Search from \"./search/pages/Search\";\r\nconst Messages = React.lazy(()=>import(\"./users/pages/Messages\")) ;\r\nconst ForgetPassword = React.lazy(() => import(\"./users/components/ForgetPassword\"));\r\nconst ResetEmail = React.lazy(() => import(\"./users/components/ResetEmail\"));\r\n\r\nconst Auth = React.lazy(() => import(\"./users/pages/Auth\"));\r\nconst UserProfileNav = React.lazy(() => import(\"./users/components/UserProfileNav\"));\r\nconst User = React.lazy(() => import(\"./users/pages/User\"));\r\nconst Users = React.lazy(() => import(\"./users/pages/Users\"));\r\nconst Friends = React.lazy(() => import(\"./friends/pages/Friends\"));\r\nconst NewPlace = React.lazy(() => import(\"./places/pages/NewPlace\"));\r\nconst UserPlaces = React.lazy(() => import(\"./places/pages/UserPlaces\"));\r\nconst UpdatePlace = React.lazy(() => import(\"./places/pages/UpdatePlace\"));\r\nconst BucketList = React.lazy(() => import(\"./places/components/BucketList\"));\r\nconst Place = React.lazy(() => import(\"./places/pages/Place\"));\r\nconst RegisterConfirmation = React.lazy(() => import(\"./users/components/RegisterConfirmation\"));\r\nconst App = () => {\r\n  const { token, login, logout, userId } = useAuth();\r\n  const [messagesData, setMessagesData] = useState([]);\r\n\r\n  let routes;\r\n  if (token) {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/:userId/my\">\r\n          <User />\r\n        </Route>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/search\" exact component={withRouter(Search)} />\r\n\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/new\" exact>\r\n          <NewPlace />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\" exact>\r\n          <Place />\r\n        </Route>\r\n        <Route path=\"/places/:placeId/edit\">\r\n          <UpdatePlace />\r\n        </Route>\r\n        <Route path=\"/:userId/friends\" exact>\r\n          <Friends />\r\n        </Route>\r\n        <Route path=\"/:userId/bucketlist\">\r\n          <BucketList />\r\n        </Route>\r\n        <Route path=\"/:userId/messages\">\r\n          <UserProfileNav />\r\n          <Messages />\r\n        </Route>\r\n        <Redirect to=\"/\" />\r\n      </Switch>\r\n    );\r\n  } else {\r\n    routes = (\r\n      <Switch>\r\n        <Route path=\"/\" exact>\r\n          <Users />\r\n        </Route>\r\n        <Route path=\"/:userId/places\" exact>\r\n          <UserPlaces />\r\n        </Route>\r\n        <Route path=\"/places/:placeId\" exact>\r\n          <Place />\r\n        </Route>\r\n        <Route path=\"/auth\">\r\n          <Auth />\r\n        </Route>\r\n        <Route path=\"/social\">\r\n          <Social />\r\n        </Route>\r\n        <Route path=\"/forgetpassword\">\r\n          <ForgetPassword />\r\n        </Route>\r\n        <Route path=\"/resetpassword/:token\">\r\n          <ResetEmail />\r\n        </Route>\r\n        <Route path=\"/confirm/:token\">\r\n          <RegisterConfirmation />\r\n        </Route>\r\n        <Redirect to=\"/auth\" />\r\n      </Switch>\r\n    );\r\n  }\r\n  return (\r\n    <AuthContext.Provider\r\n      value={{\r\n        isLoggedIn: !!token,\r\n        token,\r\n        login,\r\n        logout,\r\n        userId,\r\n      }}\r\n    >\r\n      <MessageContext.Provider value={{ messagesData }}>\r\n        <Router>\r\n          <MainNavigation />\r\n          <main>\r\n            <Suspense\r\n              fallback={\r\n                <div className=\"center\">\r\n                  <LoadingSpinner asOverlay />\r\n                </div>\r\n              }\r\n            >\r\n              {routes}\r\n            </Suspense>\r\n          </main>\r\n        </Router>\r\n      </MessageContext.Provider>\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}