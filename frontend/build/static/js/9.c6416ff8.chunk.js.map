{"version":3,"sources":["users/components/MessageItem.js","users/pages/Messages.js","shared/component/UIElements/Card.js","shared/Util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/component/formElements/Input.js","shared/hooks/form-hook.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithoutHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableSpread.js","shared/component/UIElements/Avatar.js"],"names":["MessageItem","msg","messageDeleteHandler","getUserMessages","message","useContext","MessageContext","sendRequest","useHttpClient","token","AuthContext","delMessage","userId","msgId","a","process","Authorization","formatDate","date","Date","toLocaleString","key","_id","className","isSent","onClick","id","Messages","useState","contacts","setContacts","isLoading","error","clearError","messagesData","allMessages","setAllMessages","mobileContactMode","setMobileContactMode","myScrollRef","useRef","scrollToBottom","current","scrollIntoView","behavior","useFrom","value","isValid","state","inputHandler","fetchContacts","data","corresponders","useEffect","sendMessage","e","preventDefault","corresponderId","messageValue","inputs","JSON","stringify","res","messageId","console","fetchedMessages","messages","dltCorresponder","filteredContacts","filter","contact","log","deletedMsgId","prevAllMessages","Fragment","LoadingSpinner","asOverlay","ErrorModal","onClear","Card","length","map","corresponder","Avatar","image","alt","name","to","i","ref","onSubmit","Input","element","type","validators","VALIDATOR_REQUIRE","errorText","onInput","Button","props","style","children","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validator","trim","test","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","arguments","source","forEach","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","configurable","writable","inputReducer","action","isTouched","changeHandeler","event","dispatch","touchHandler","inaialState","initailValue","initailValid","useReducer","placeholder","onChange","onBlur","rows","htmlFor","label","formReducer","formIsValid","inputId","initailInput","initailFormValidity","useCallback","inputData","formValidity","_createForOfIteratorHelper","o","Symbol","iterator","Array","isArray","F","s","n","done","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","_toConsumableArray","arr","arrayLikeToArray","iter","from","unsupportedIterableToArray","width","src","height"],"mappings":"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","file":"static/js/9.c6416ff8.chunk.js","sourcesContent":["import React, { useContext, Fragment } from \"react\";\r\nimport { MessageContext } from \"../../shared/context/message-context\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport \"./MessageItem.css\";\r\n\r\nconst MessageItem = ({ msg, messageDeleteHandler, getUserMessages }) => {\r\n  const message = useContext(MessageContext);\r\n  const { sendRequest } = useHttpClient();\r\n  const { token } = useContext(AuthContext);\r\n\r\n  const delMessage = async (userId, msgId) => {\r\n    await sendRequest(\r\n      `${process.env.REACT_APP_BACKEND_URL}/user/messages/${userId}/${msgId}`,\r\n      \"DELETE\",\r\n      null,\r\n      {\r\n        Authorization: \"Bearer \" + token,\r\n      }\r\n    );\r\n\r\n    messageDeleteHandler(msgId);\r\n    getUserMessages(userId);\r\n  };\r\n  const formatDate = (date) => {\r\n    const d1 = new Date(date);\r\n    return d1.toLocaleString(\"en-NL\");\r\n  };\r\n  return (\r\n    <div\r\n      key={msg._id}\r\n      className={`mContainer ${msg.isSent ? \"myMsg\" : \"userMsg\"}`}\r\n    >\r\n      <div className={`msgInfo ${msg.isSent ? \"toRyt\" : \"toLeft\"}`}>\r\n        {msg.isSent ? (\r\n          <Fragment>\r\n            <p>{formatDate(msg.date)}</p>\r\n            <button onClick={() => delMessage(message.id, msg._id)}>x</button>\r\n          </Fragment>\r\n        ) : (\r\n          <Fragment>\r\n            <button onClick={() => delMessage(message.id, msg._id)}>x</button>\r\n            <p>{formatDate(msg.date)}</p>\r\n          </Fragment>\r\n        )}\r\n      </div>\r\n      <p>{msg.message}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MessageItem;\r\n","import React, { useContext, useState, useEffect, useRef } from \"react\";\r\nimport useHttpClient from \"../../shared/hooks/http-hook\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport Card from \"../../shared/component/UIElements/Card\";\r\nimport ErrorModal from \"../../shared/component/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/component/UIElements/LoadingSpinner\";\r\nimport \"./Messages.css\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { MessageContext } from \"../../shared/context/message-context\";\r\nimport Input from \"../../shared/component/formElements/Input\";\r\nimport { useFrom } from \"../../shared/hooks/form-hook\";\r\nimport { VALIDATOR_REQUIRE } from \"../../shared/Util/validators\";\r\nimport Button from \"../../shared/component/formElements/Button\";\r\nimport MessageItem from \"../components/MessageItem\";\r\nimport Avatar from \"../../shared/component/UIElements/Avatar\";\r\n\r\nconst Messages = () => {\r\n  const [contacts, setContacts] = useState([]);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const { token } = useContext(AuthContext);\r\n  const message = useContext(MessageContext);\r\n  const [allMessages, setAllMessages] = useState(message.messagesData);\r\n  const [mobileContactMode, setMobileContactMode] = useState(true);\r\n\r\n  // scroll to the bottom of the messages box\r\n  const myScrollRef = useRef();\r\n  const scrollToBottom = () => {\r\n    myScrollRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  const [state, inputHandler] = useFrom(\r\n    {\r\n      message: {\r\n        value: \"\",\r\n        isValid: false,\r\n      },\r\n    },\r\n    false\r\n  );\r\n\r\n  // fetching contacts (only texted ones not all users)\r\n  const fetchContacts = async () => {\r\n    try {\r\n      const data = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: `Bearer ${token}`,\r\n        }\r\n      );\r\n      setContacts(data.corresponders);\r\n      scrollToBottom();\r\n    } catch (error) {}\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchContacts();\r\n  }, [sendRequest, token]);\r\n\r\n  // Send a message\r\n  const sendMessage = async (e) => {\r\n    e.preventDefault();\r\n    const corresponderId = message.id;\r\n    const messageValue = state.inputs.message.value;\r\n    try {\r\n      const res = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages/${corresponderId}`,\r\n        \"POST\",\r\n        JSON.stringify({\r\n          message: messageValue,\r\n        }),\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n          \"Content-Type\": \"application/json\",\r\n        }\r\n      );\r\n      setAllMessages([\r\n        ...allMessages,\r\n        { message: messageValue, isSent: true, _id: res.messageId },\r\n      ]);\r\n      scrollToBottom();\r\n      getUserMessages(corresponderId);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Get all messages as per the texted person\r\n  const getUserMessages = async (id) => {\r\n    const corresponderId = id;\r\n    try {\r\n      const fetchedMessages = await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages/${corresponderId}`,\r\n        \"GET\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n        }\r\n      );\r\n      fetchContacts();\r\n      setAllMessages(fetchedMessages.messages);\r\n      message.id = corresponderId;\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  // Delete a corresponder\r\n  const dltCorresponder = async (id) => {\r\n    try {\r\n      await sendRequest(\r\n        `${process.env.REACT_APP_BACKEND_URL}/user/messages/${id}`,\r\n        \"DELETE\",\r\n        null,\r\n        {\r\n          Authorization: \"Bearer \" + token,\r\n        }\r\n      );\r\n      const filteredContacts = contacts.filter((contact) => contact._id !== id);\r\n      setContacts(filteredContacts);\r\n      setAllMessages([]);\r\n      fetchContacts();\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  };\r\n\r\n  const messageDeleteHandler = (deletedMsgId) => {\r\n    setAllMessages((prevAllMessages) =>\r\n      prevAllMessages.filter((msg) => msg.id !== deletedMsgId)\r\n    );\r\n  };\r\n\r\n  // const msgBoxHeight = {\r\n  //   height: window.innerHeight - 0.12 * window.innerHeight,\r\n  // };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      {isLoading && <LoadingSpinner asOverlay />}\r\n      <ErrorModal error={error} onClear={clearError} />\r\n      {!isLoading && (\r\n        <Card className=\"messages__card\">\r\n          {/* Contacts */}\r\n          <div\r\n            className={\r\n              mobileContactMode\r\n                ? `contacts__container contact__container-mobile`\r\n                : `contacts__container contact__container-hidden`\r\n            }\r\n          >\r\n            <h2 className=\"header\">Recent</h2>\r\n            <div className=\"contacts__box\">\r\n              {contacts.length > 0 &&\r\n                contacts.map((contact) => (( contact.corresponder &&\r\n                  <Card\r\n                    className=\"user-item__content\"\r\n                    key={contact.corresponder._id}\r\n                    className={`user-item__content ${\r\n                      message.id === contact.corresponder._id &&\r\n                      \"activatedContact\"\r\n                    }`}\r\n                  >\r\n                    <div\r\n                      onClick={() => {\r\n                        getUserMessages(contact.corresponder._id);\r\n                        setMobileContactMode(false);\r\n                      }}\r\n                      className={`cardWidth`}\r\n                    >\r\n                      <div className=\"user-item__image m-1\">\r\n                        <Avatar\r\n                          image={contact.corresponder.image}\r\n                          alt={contact.corresponder.name}\r\n                        />\r\n                      </div>\r\n                      <div className=\"user-item__info m-1\">\r\n                        <h3>{contact.corresponder.name}</h3>\r\n                      </div>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => dltCorresponder(contact.corresponder._id)}\r\n                    >\r\n                      X\r\n                    </button>\r\n                  </Card>\r\n                )))}\r\n            </div>\r\n            <div className=\"innerBox\">\r\n              {contacts.length === 0 && (\r\n                <Link className=\"link-text\" to=\"/\">\r\n                  Text a user!\r\n                </Link>\r\n              )}\r\n            </div>\r\n          </div>\r\n\r\n          {/* Messages */}\r\n          <div\r\n            className={\r\n              mobileContactMode\r\n                ? `message__box message__box-hidden`\r\n                : `message__box message__box-mobile`\r\n            }\r\n          >\r\n            <h2 className=\"header\">Messages</h2>\r\n            <a\r\n              onClick={() => {\r\n                setMobileContactMode(true);\r\n              }}\r\n              className=\"mobile-hidden\"\r\n            >\r\n              BACK\r\n            </a>\r\n            <div className=\"msgsContainer\">\r\n              {allMessages.length > 0 ? (\r\n                allMessages.map((msg, i) => (\r\n                  <MessageItem\r\n                    key={i}\r\n                    msg={msg}\r\n                    messageDeleteHandler={messageDeleteHandler}\r\n                    getUserMessages={getUserMessages}\r\n                  />\r\n                ))\r\n              ) : (\r\n                <div>Start a message!</div>\r\n              )}\r\n              <div ref={myScrollRef}></div>\r\n            </div>\r\n\r\n            <form onSubmit={sendMessage}>\r\n              <Input\r\n                id=\"message\"\r\n                element=\"input\"\r\n                type=\"text\"\r\n                validators={[VALIDATOR_REQUIRE()]}\r\n                errorText=\"Please enter your message\"\r\n                onInput={inputHandler}\r\n              />\r\n              <Button type=\"submit\">Send</Button>\r\n            </form>\r\n          </div>\r\n        </Card>\r\n      )}{\" \"}\r\n    </React.Fragment>\r\n  );\r\n};\r\nexport default Messages;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React, { useReducer, useEffect } from \"react\";\r\nimport { validate } from \"../../Util/validators\";\r\nimport \"./Input.css\";\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"CHANGE\":\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators),\r\n      };\r\n    case \"TOUCH\":\r\n      return {\r\n        ...state,\r\n        isTouched: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const changeHandeler = event => {\r\n    dispatch({\r\n      type: \"CHANGE\",\r\n      val: event.target.value,\r\n      validators: props.validators,\r\n    });\r\n  };\r\n  const touchHandler = event => {\r\n    dispatch({ type: \"TOUCH\" });\r\n  };\r\n  const inaialState = {\r\n    value: props.initailValue || \"\",\r\n    isValid: props.initailValid || false,\r\n    isTouched: false,\r\n  };\r\n  const [state, dispatch] = useReducer(inputReducer, inaialState);\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = state;\r\n  useEffect(() => {\r\n    onInput(id, value, isValid);\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const element =\r\n    props.element === \"input\" ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandeler}\r\n        onBlur={touchHandler}\r\n        value={state.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div className={`form-control ${!state.isValid && state.isTouched && \"form-control--invalid\"}`}>\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!state.isValid && state.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from \"react\";\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"INPUT_CHANGE\":\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case \"SET_DATA\":\r\n      return {\r\n        ...state,\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useFrom = (initailInput, initailFormValidity) => {\r\n  const [state, dispatch] = useReducer(formReducer, {\r\n    inputs: initailInput,\r\n    isValid: initailFormValidity\r\n  });\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: \"INPUT_CHANGE\",\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: \"SET_DATA\",\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n  return [state, inputHandler, setFormData];\r\n};\r\n","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import arrayWithoutHoles from \"./arrayWithoutHoles\";\nimport iterableToArray from \"./iterableToArray\";\nimport unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nimport nonIterableSpread from \"./nonIterableSpread\";\nexport default function _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}","import arrayLikeToArray from \"./arrayLikeToArray\";\nexport default function _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}","export default function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}","export default function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import React from \"react\";\r\n\r\nimport \"./Avatar.css\";\r\n\r\nconst Avatar = ({ image, alt, style, className, width }) => {\r\n  return (\r\n    <div className={`avatar ${className}`} style={style}>\r\n      <img src={image} alt={alt} style={{ width: width, height: width }} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Avatar;\r\n"],"sourceRoot":""}